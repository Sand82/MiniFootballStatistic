@using MiniFootballStatistic.Models.Tournament.TurnamentEdit
@model TournamentEditModel

@{
    ViewData["Title"] = "Edit Event";
}

@{
    var userId = User.GetId();
}

@{
    Dictionary<int, string> dictPosition = new Dictionary<int, string>()
    {
        {1, "md-start"}, {2, "md-center"}, {3, "md-end"},
    };

    int dictCounter = 1;
    int teamsInEvent = @Model.SchemaLength;
    int counter = @Model.Levels;
    int colCounter = 1;
    int groupCounter = 1;
    int modelPosition = 0;
}

@if (string.Compare(userId, @Model.UserId) == 0)
{
    <form method="Post" class="form-floating">
        <div class="container">
            <div class="row">
                @for (var i = 0; i < counter; i++)
                {
                    teamsInEvent /= 2;
                    <div class="col-md-2 align-self-@(dictPosition[dictCounter])">

                        @for (var j = 0; j < teamsInEvent; j++)
                        {
                            @if (i == 1)
                            {
                                <div style="margin: 200px"></div>
                            }

                            @if (i == 2)
                            {
                                <div style="margin: 400px"></div>
                            }
                            @if (i == 3)
                            {
                                <div style="margin: 600px"></div>
                            }

                            <div class="form-group row-4 border border-secondary" style="margin-top: 5px">
                                <h5 style="text-align:center;">Group @groupCounter</h5>

                                <div class="d-flex flex-row bd-highlight mb-3">
                                    <div id="atag-div" class="row" style="margin: 5px;">

                                        <label asp-for="@Model.Teams[modelPosition].Name"> Team Name </label>
                                        <input onchange="getValue(event, @Model.Id, @Model.Teams[modelPosition].Id)"
                                   id="Name-@Model.Teams[modelPosition].Id" value="@Model.Teams[modelPosition].Name">

                                        <label asp-for="@Model.Teams[modelPosition].PositionResult"> Scored goals </label>
                                        <input onchange="getResult(event, @Model.Id, @Model.Teams[modelPosition].Id, @groupCounter, @Model.SchemaLength)"
                                   id="Velue-@Model.Teams[modelPosition].Id" value="@Model.Teams[modelPosition].PositionResult">

                                        <a class="btn btn-secondary btn-sm" style="margin-top: 5px;"
                                            asp-controller="Player" asp-action="Statistic" asp-route-tournamentId="@Model.Id"
                                            asp-route-teamId="@Model.Teams[modelPosition].Id"
                                            asp-route-teamName="@Model.Teams[modelPosition].Name">Set stats</a>

                                        <a id="aElement@(Model.Teams[modelPosition].Id)" class="btn btn-secondary btn-sm" style="margin-top: 5px;"
                                            onclick="seePlayerStats(event, @Model.Id, @Model.Teams[modelPosition].Id)"
                                            onmouseout="hidePlayersStatisticMenu(event)">Players Info</a>
                                    </div>
                                </div>
                                <div class="d-flex flex-row bd-highlight mb-3">
                                    <div id="atag-div" class="row" style="margin: 5px;">

                                        <label asp-for="@Model.Teams[modelPosition + 1].Name"> Team Name </label>
                                        <input onchange="getValue(event, @Model.Id, @Model.Teams[modelPosition + 1].Id)"
                                   id="Name-@Model.Teams[modelPosition + 1].Id" value="@Model.Teams[modelPosition + 1].Name">

                                        <label asp-for="@Model.Teams[modelPosition + 1].PositionResult"> Scored goals </label>
                                        <input onchange="getResult(event, @Model.Id, @Model.Teams[modelPosition + 1].Id, @groupCounter, @Model.SchemaLength)"
                                   id="Velue-@Model.Teams[modelPosition + 1].Id" value="@Model.Teams[modelPosition + 1].PositionResult">

                                        <a class="btn btn-secondary btn-sm" style="margin-top: 5px;"
                                            asp-controller="Player" asp-action="Statistic" asp-route-tournamentId="@Model.Id"
                                            asp-route-teamId="@Model.Teams[modelPosition + 1].Id"
                                            asp-route-teamName="@Model.Teams[modelPosition + 1].Name">Set stats</a>

                                        <a id="aElement@(Model.Teams[modelPosition + 1].Id)" class="btn btn-secondary btn-sm" style="margin-top: 5px;"
                                            onclick="seePlayerStats(event, @Model.Id, @Model.Teams[modelPosition + 1].Id)"
                                            onmouseout="hidePlayersStatisticMenu(event)">Players Info</a>
                                    </div>
                                </div>
                            </div>

                            groupCounter++;
                            modelPosition += 2;
                        }

                    </div>
                    colCounter++;
                }              

                <div style="margin-top: 100px;" class="d-grid gap-2 d-md-block">
                    <a class="btn btn-outline-secondary me-md-2" asp-controller="Event" asp-action="Info" asp-route-id="@Model.Id">See Changes</a>
                </div>

            </div>
        </div>
    </form>


}
@section Scripts{
<script src="~/js/EditViewModel.js" asp-append-version="true"></script>

<partial name="_ValidationScriptsPartial" />
}


